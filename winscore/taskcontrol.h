//
// Copyright© Guy Ford Byars. 1997 - 2001. All rights reserved.
 //
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CTaskControl wrapper class

class CTaskControl : public CWnd
{
protected:
	DECLARE_DYNCREATE(CTaskControl)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x68982028, 0xc595, 0x11d2, { 0xb6, 0x53, 0x0, 0x80, 0xc8, 0x4b, 0x1, 0x61 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	void AddControlPoint(short iID, short iLat, double dLatMiin, short iLong, double dLongMin, LPCTSTR strName, long iAttributes);
	void Zoom(long iScale);
	void SetVScroll(double dVPos);
	void SetHScroll(double dHScroll);
	void SetZoom(double dZoom);
	void Reset();
	void Undo();
	long GetNumPoints();
	long GetPoint(long iPoint);
	void SetUnits(long eUnitsCode);
	void OnKeyUP(long nChar);
	void SetStartPoint(short sPointID);
	void SetFinishPoint(short sPointID);
};

