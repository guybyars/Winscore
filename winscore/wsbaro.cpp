// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "wsbaro.h"

/////////////////////////////////////////////////////////////////////////////
// CWSBaro

IMPLEMENT_DYNCREATE(CWSBaro, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CWSBaro properties

/////////////////////////////////////////////////////////////////////////////
// CWSBaro operations

short CWSBaro::AddPilot(LPCTSTR strContestNo, LPCTSTR strLastName, LPCTSTR strFirstName, short sClass, long lColorREF)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_BSTR VTS_I2 VTS_I4;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		strContestNo, strLastName, strFirstName, sClass, lColorREF);
	return result;
}

void CWSBaro::SetCursorPos(long lCursorTime)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lCursorTime);
}

void CWSBaro::AddPoint(short sPilotIndes, long lTimeIndex, short sGPSAltitude, short sPressureAltitude)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4 VTS_I2 VTS_I2;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 sPilotIndes, lTimeIndex, sGPSAltitude, sPressureAltitude);
}

void CWSBaro::SetTimeRange(long lStartTime, long lEndTime)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lStartTime, lEndTime);
}

void CWSBaro::AddPoints(const VARIANT& vlTime, const VARIANT& vstrContestNo, const VARIANT& vsPressureAlt, const VARIANT& vsGPSAlt)
{
	static BYTE parms[] =
		VTS_VARIANT VTS_VARIANT VTS_VARIANT VTS_VARIANT;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 &vlTime, &vstrContestNo, &vsPressureAlt, &vsGPSAlt);
}

void CWSBaro::ResetAll()
{
	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CWSBaro::AddPointByName(LPCTSTR strContestNo, long lTimeIndex, short sGPSAltitude, short sPressureAltitude)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I2 VTS_I2;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strContestNo, lTimeIndex, sGPSAltitude, sPressureAltitude);
}

void CWSBaro::OnControlKey(short nChar)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nChar);
}

void CWSBaro::SetTaskOpenTime(long lTime)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lTime);
}

void CWSBaro::RedrawBaro()
{
	InvokeHelper(0xa, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CWSBaro::SetPilotVisibility(LPCTSTR strContestNo, BOOL bVisible)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BOOL;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 strContestNo, bVisible);
}

long CWSBaro::GetCursorPos()
{
	long result;
	InvokeHelper(0xc, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

BOOL CWSBaro::IsCursorEnd()
{
	BOOL result;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

void CWSBaro::CursorHome()
{
	InvokeHelper(0xe, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CWSBaro::AddFullPoint(short sPilotIndex, long lTimeIndex, short sGPSAltitude, short sPressAltitude, float fLat, float fLong, float fSpeed, float fVSpeed, short sENL)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4 VTS_I2 VTS_I2 VTS_R4 VTS_R4 VTS_R4 VTS_R4 VTS_I2;
	InvokeHelper(0xf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 sPilotIndex, lTimeIndex, sGPSAltitude, sPressAltitude, fLat, fLong, fSpeed, fVSpeed, sENL);
}

void CWSBaro::SetDisplayOption(long lOption, short sValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x10, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lOption, sValue);
}

short CWSBaro::GetDisplayOption(long lOption)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		lOption);
	return result;
}

void CWSBaro::SetTaskCloseTime(long lTime)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x12, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 lTime);
}

void CWSBaro::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
