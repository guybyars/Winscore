//
// Copyright© Guy Ford Byars. 1997 - 2001. All rights reserved.
 //
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "taskcontrol.h"

/////////////////////////////////////////////////////////////////////////////
// CTaskControl

IMPLEMENT_DYNCREATE(CTaskControl, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CTaskControl properties

/////////////////////////////////////////////////////////////////////////////
// CTaskControl operations

void CTaskControl::AddControlPoint(short iID, short iLat, double dLatMiin, short iLong, double dLongMin, LPCTSTR strName, long iAttributes)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_R8 VTS_I2 VTS_R8 VTS_BSTR VTS_I4;
	InvokeHelper(0x1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 iID, iLat, dLatMiin, iLong, dLongMin, strName, iAttributes);
}

void CTaskControl::Zoom(long iScale)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 iScale);
}

void CTaskControl::SetVScroll(double dVPos)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 dVPos);
}

void CTaskControl::SetHScroll(double dHScroll)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 dHScroll);
}

void CTaskControl::SetZoom(double dZoom)
{
	static BYTE parms[] =
		VTS_R8;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 dZoom);
}

void CTaskControl::Reset()
{
	InvokeHelper(0x6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CTaskControl::Undo()
{
	InvokeHelper(0x7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

long CTaskControl::GetNumPoints()
{
	long result;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CTaskControl::GetPoint(long iPoint)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		iPoint);
	return result;
}

void CTaskControl::SetUnits(long eUnitsCode)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 eUnitsCode);
}

void CTaskControl::OnKeyUP(long nChar)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nChar);
}

void CTaskControl::SetStartPoint(short sPointID)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 sPointID);
}

void CTaskControl::SetFinishPoint(short sPointID)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0xd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 sPointID);
}

